name: Build
on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
concurrency:
  group: ${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  build:
    name: ${{ matrix.id }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        id:
          - "mysql-8.0"
    steps:
      - name: Parse ID
        id: parse
        run: |
          set -x
          case "${{ github.ref }}" in
            refs/tags/*)
              version="${{ github.ref_name }}"
              case "${version}" in
                ${{ matrix.id }}.*)
                  ;;
                *)
                  version=${{ matrix.id }}-latest
                  ;;
              esac
              ;;
            *)
              version=${{ matrix.id }}-latest
              ;;
          esac

          push=false
          if [[ "${{ github.event_name }}" = "push" ]]; then
            push=true
          fi

          tags="groonga/mroonga:${version}"
          if [ "${version}" = "mysql-8.0-latest" ]; then
            tags="${tags},groonga/mroonga:latest"
          fi
          echo "::set-output name=push::${push}"
          echo "::set-output name=tags::${tags}"
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        if: steps.parse.outputs.push == 'true'
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - uses: docker/setup-buildx-action@v3
        id: buildx
      - uses: docker/build-push-action@v6
        id: docker_build
        with:
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          context: ${{ matrix.id }}
          push: ${{ steps.parse.outputs.push }}
          tags: ${{ steps.parse.outputs.tags }}
      - name: Image info
        run: |
          echo "ref: ${{ github.ref }}"
          echo "tags: ${{ steps.parse.outputs.tags }}"
          echo "digest: ${{ steps.docker_build.outputs.digest }}"
